<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTTP interface for indexes on ArangoDB Documentation</title><link>http://localhost/3.13/develop/http-api/indexes/</link><description>Recent content in HTTP interface for indexes on ArangoDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://localhost/3.13/develop/http-api/indexes/index.xml" rel="self" type="application/rss+xml"/><item><title>HTTP interface for persistent indexes</title><link>http://localhost/3.13/develop/http-api/indexes/persistent/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.13/develop/http-api/indexes/persistent/</guid><description>The index types hash and skiplist are aliases for the persistent index type and should no longer be used to create new indexes. The aliases will be removed in a future version. Create a persistent index POST /_db/{database-name}/_api/index Creates a persistent index for the collection collection-name, if it does not already exist.
In a sparse index all documents will be excluded from the index that do not contain at least one of the specified index attributes (i.</description></item><item><title>HTTP interface for inverted indexes</title><link>http://localhost/3.13/develop/http-api/indexes/inverted/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.13/develop/http-api/indexes/inverted/</guid><description>Create an inverted index POST /_db/{database-name}/_api/index Creates an inverted index for the collection collection-name, if it does not already exist. The call expects an object containing the index details. Path Parameters database-name* string The name of the database.
Query Parameters collection* string The collection name.
HTTP Headers Request Body application/json object analyzer string (default: "identity") The name of an Analyzer to use by default. This Analyzer is applied to the values of the indexed fields for which you don&amp;rsquo;t define Analyzers explicitly.</description></item><item><title>HTTP interface for TTL (time-to-live) indexes</title><link>http://localhost/3.13/develop/http-api/indexes/ttl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.13/develop/http-api/indexes/ttl/</guid><description>Create a TTL index POST /_db/{database-name}/_api/index Creates a time-to-live (TTL) index for the collection collection-name if it does not already exist. Path Parameters database-name* string The name of the database.
Query Parameters collection* string The collection name.
HTTP Headers Request Body application/json object expireAfter* number The time interval (in seconds) from the point in time stored in the fields attribute after which the documents count as expired. Can be set to 0 to let documents expire as soon as the server time passes the point in time stored in the document attribute, or to a higher number to delay the expiration.</description></item><item><title>HTTP interface for multi-dimensional indexes</title><link>http://localhost/3.13/develop/http-api/indexes/multi-dimensional/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.13/develop/http-api/indexes/multi-dimensional/</guid><description>Create a multi-dimensional index POST /_db/{database-name}/_api/index Creates a multi-dimensional index for the collection collection-name, if it does not already exist. Path Parameters database-name* string The name of the database.
Query Parameters collection* string The collection name.
HTTP Headers Request Body application/json object estimates boolean (default: true) This attribute controls whether index selectivity estimates are maintained for the index. Not maintaining index selectivity estimates can have a slightly positive impact on write performance.</description></item><item><title>HTTP interface for geo-spatial indexes</title><link>http://localhost/3.13/develop/http-api/indexes/geo-spatial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.13/develop/http-api/indexes/geo-spatial/</guid><description>Create a geo-spatial index POST /_db/{database-name}/_api/index Creates a geo-spatial index in the collection collection, if it does not already exist.
Geo indexes are always sparse, meaning that documents that do not contain the index attributes or have non-numeric values in the index attributes will not be indexed.
Path Parameters database-name* string The name of the database.
Query Parameters collection* string The collection name.
HTTP Headers Request Body application/json object fields* array of strings An array with one or two attribute paths.</description></item><item><title>HTTP interface for full-text indexes</title><link>http://localhost/3.13/develop/http-api/indexes/fulltext/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.13/develop/http-api/indexes/fulltext/</guid><description>Create a full-text index POST /_db/{database-name}/_api/index The fulltext index type is deprecated from version 3.10 onwards. Creates a fulltext index for the collection collection-name, if it does not already exist. The call expects an object containing the index details. Path Parameters database-name* string The name of the database.
Query Parameters collection* string The collection name.
HTTP Headers Request Body application/json object fields* array of strings A list with exactly one attribute path.</description></item><item><title>HTTP interface for vector indexes</title><link>http://localhost/3.13/develop/http-api/indexes/vector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost/3.13/develop/http-api/indexes/vector/</guid><description>Introduced in: v3.12.4
Create a vector index POST /_db/{database-name}/_api/index Creates a vector index for the collection collection-name, if it does not already exist. Path Parameters database-name* string The name of the database.
Query Parameters collection* string The collection name.
HTTP Headers Request Body application/json object fields* array of strings A list with exactly one attribute path to specify where the vector embedding is stored in each document. The vector data needs to be populated before creating the index.</description></item></channel></rss>